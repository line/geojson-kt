/*
 * This source file was generated by the Gradle 'init' task
 */
package jp.co.lycorp.geojson.validator

import jp.co.lycorp.geojson.Polygon
import jp.co.lycorp.geojson.Position
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.assertThrows

class PolygonValidatorTest {
    @Test
    fun `should fail when linear ring size is less than 4`() {
        val unclosedRing = listOf(
            Position(10.0, 0.0),
            Position(1.0, 0.0),
            Position(10.0, 0.0),
        )
        val err = assertThrows<IllegalArgumentException> { Polygon(listOf(unclosedRing)) }
        val expected = "Polygon linear ring must have at least 4 coordinates"
        val actual = err.message
        assertEquals(expected, actual)
    }

    @Test
    fun `should fail when linear ring is not closed`() {
        val unclosedRing = listOf(
            Position(10.0, 0.0),
            Position(1.0, 0.0),
            Position(1.0, 1.0),
            Position(10.0, 1.0),
        )
        val err = assertThrows<IllegalArgumentException> { Polygon(listOf(unclosedRing)) }
        val expected = "Polygon linear ring first element must be equal to last element"
        val actual = err.message
        assertEquals(expected, actual)
    }

    @Test
    fun `should fail when linear ring does not have 3 unique coordinates`() {
        val unclosedRing = listOf(
            Position(10.0, 0.0),
            Position(1.0, 0.0),
            Position(1.0, 0.0),
            Position(1.0, 0.0),
            Position(10.0, 0.0),
        )
        val err = assertThrows<IllegalArgumentException> { Polygon(listOf(unclosedRing)) }
        val expected = "Polygon linear ring must have at least 3 unique coordinates"
        val actual = err.message
        assertEquals(expected, actual)
    }
}
